--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -11,6 +11,8 @@ IF (NOT CMAKE_BUILD_TYPE)
   SET(CMAKE_BUILD_TYPE Release CACHE STRING "Choose the type of build, options are: Release Debug" FORCE)
 ENDIF(NOT CMAKE_BUILD_TYPE)

+option(HCC_OPEN_SOURCE_BUILD "Build HCC for installation on purely open source ROCm builds which do not supply closed-source extensions." OFF)
+
 # Use two different methods to determine host distribution: lsb_release and if that fails grep /etc/os-release
 find_program( lsb_executable lsb_release )

@@ -556,10 +558,13 @@ endif( USE_LIBCXX )
 # for non-official release build, we want to relax the dependency on rocr runtime
 if (OFFICIAL_RELEASE_BUILD)
   if (HCC_INTEGRATE_ROCDL)
-    set(HCC_ROCR_DEP ", hsa-rocr-dev, hsa-ext-rocr-dev, rocm-utils")
+    set(HCC_ROCR_DEP ", hsa-rocr-dev, rocminfo")
   else (HCC_INTEGRATE_ROCDL)
-    set(HCC_ROCR_DEP ", hsa-rocr-dev, hsa-ext-rocr-dev, rocm-device-libs, rocm-utils")
+    set(HCC_ROCR_DEP ", hsa-rocr-dev, rocm-device-libs, rocminfo")
   endif(HCC_INTEGRATE_ROCDL)
+  if (NOT HCC_OPEN_SOURCE_BUILD)
+    string(CONCAT "${HCC_ROCR_DEP}" ", hsa-ext-rocr-dev")
+  endif(NOT HCC_OPEN_SOURCE_BUILD)
 else (OFFICIAL_RELEASE_BUILD)
   set(HCC_ROCR_DEP "")
 endif (OFFICIAL_RELEASE_BUILD)


--- a/lib/hcc-config.cmake.in
+++ b/lib/hcc-config.cmake.in
@@ -14,13 +14,15 @@
     /opt/rocm/lib
 )

-add_library(hsa-runtime64 SHARED IMPORTED GLOBAL)
+if(NOT TARGET hsa-runtime64)
+    add_library(hsa-runtime64 SHARED IMPORTED GLOBAL)

-set_target_properties(hsa-runtime64 PROPERTIES
-  INTERFACE_INCLUDE_DIRECTORIES "${HSA_HEADER}"
-  IMPORTED_LOCATION "${HSA_LIBRARY}"
-  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${HSA_HEADER}"
-)
+    set_target_properties(hsa-runtime64 PROPERTIES
+      INTERFACE_INCLUDE_DIRECTORIES "${HSA_HEADER}"
+      IMPORTED_LOCATION "${HSA_LIBRARY}"
+      INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "${HSA_HEADER}"
+    )
+endif()

 include( "${CMAKE_CURRENT_LIST_DIR}/ImportedTargets.cmake" )
 include( "${CMAKE_CURRENT_LIST_DIR}/hcc-targets.cmake" )
